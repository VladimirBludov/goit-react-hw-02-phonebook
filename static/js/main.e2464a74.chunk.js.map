{"version":3,"sources":["components/FindContacts/FindContacts.module.css","components/Section/Section.module.css","components/App/App.module.css","components/Contacts/Contacts.module.css","components/ContactForm/ContactForm.module.css","components/Contacts/ItemContact/ItemContact.module.css","components/ContactForm/ContactForm.js","components/Contacts/ItemContact/ItemContact.js","components/Contacts/Contacts.js","components/FindContacts/FindContacts.js","components/Section/Section.js","components/App/App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","addContact","props","resetForm","this","className","s","form","onSubmit","label","input","type","onChange","pattern","title","autoComplete","required","button","Component","ItemContact","id","index","deleteContact","item","onClick","Contacts","contacts","wrapper","map","FindContacts","filter","Section","children","Notify","init","position","App","checkContact","contact","shortid","generate","getFilter","getVisibleContacts","optimizedFilter","toLowerCase","includes","normalizedName","find","failure","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e2464a74.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"FindContacts_label__2-5dx\",\"input\":\"FindContacts_input__38Ugo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Section_wrapper__22AaE\",\"title\":\"Section_title__2sxko\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__EsEen\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Contacts_wrapper__ksxSV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1zliQ\",\"label\":\"ContactForm_label__2jne9\",\"input\":\"ContactForm_input__1g7a3\",\"button\":\"ContactForm_button__3oFrG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ItemContact_item__2SnJk\",\"index\":\"ItemContact_index__vsSsK\",\"name\":\"ItemContact_name__3lywq\",\"button\":\"ItemContact_button__tdSUn\"};","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactForm.module.css';\r\n\r\nexport default class ContactForm extends Component {\r\n  static propTypes = {\r\n    addContact: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { addContact } = this.props;\r\n\r\n    addContact(this.state);\r\n    this.resetForm();\r\n  };\r\n\r\n  resetForm = () => this.setState({ name: '', number: '' });\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form className={s.form} onSubmit={this.handleSubmit}>\r\n        <label className={s.label}>\r\n          Name\r\n          <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            autoComplete=\"off\"\r\n            required\r\n          />\r\n        </label>\r\n        <label className={s.label}>\r\n          Number\r\n          <input\r\n            className={s.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            autoComplete=\"off\"\r\n            required\r\n          />\r\n        </label>\r\n        <button className={s.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport s from './ItemContact.module.css';\r\n\r\nexport default function ItemContact({\r\n  id,\r\n  name,\r\n  number,\r\n  index,\r\n  deleteContact,\r\n}) {\r\n  return (\r\n    <li className={s.item}>\r\n      <span className={s.index}>{`${index + 1}.`}</span>\r\n      <span className={s.name}>{name}: </span>\r\n      <span>{number}</span>\r\n      <button className={s.button} onClick={() => deleteContact(id)}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nItemContact.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  index: PropTypes.number.isRequired,\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './Contacts.module.css';\r\nimport ItemContact from './ItemContact';\r\n\r\nexport default function Contacts({ contacts, deleteContact }) {\r\n  return (\r\n    <ul className={s.wrapper}>\r\n      {contacts.map(({ id, name, number }, index) => {\r\n        return (\r\n          <ItemContact\r\n            key={id}\r\n            id={id}\r\n            name={name}\r\n            number={number}\r\n            index={index}\r\n            deleteContact={deleteContact}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContacts.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './FindContacts.module.css';\r\n\r\nexport default function FindContacts({ filter, onChange }) {\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filter}\r\n        onChange={onChange}\r\n        autoComplete=\"off\"\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nFindContacts.propTypes = {\r\n  filter: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <section className={s.wrapper}>\r\n      {title && <h2 className={s.title}>{title}</h2>}\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node,\r\n  ]).isRequired,\r\n};\r\n","import React, { Component } from 'react';\r\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\r\nimport s from './App.module.css';\r\nimport shortid from 'shortid';\r\nimport ContactForm from '../ContactForm';\r\nimport Contacts from '../Contacts';\r\nimport FindContacts from '../FindContacts';\r\nimport Section from '../Section';\r\n\r\nNotify.init({\r\n  position: 'center-top',\r\n});\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: '',\r\n  };\r\n\r\n  addContact = ({ name, number }) => {\r\n    const isContact = this.checkContact(this.state.contacts, name);\r\n\r\n    if (isContact) return;\r\n\r\n    const contact = {\r\n      id: shortid.generate(),\r\n      name,\r\n      number,\r\n    };\r\n\r\n    this.setState(({ contacts }) => ({\r\n      contacts: [...contacts, contact],\r\n    }));\r\n  };\r\n\r\n  deleteContact = id => {\r\n    this.setState(({ contacts }) => ({\r\n      contacts: contacts.filter(contact => contact.id !== id),\r\n    }));\r\n  };\r\n\r\n  getFilter = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  getVisibleContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n    const optimizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(optimizedFilter)\r\n    );\r\n  };\r\n\r\n  checkContact = (contacts, name) => {\r\n    const normalizedName = name.toLowerCase();\r\n    const isContact = contacts.find(\r\n      contact => contact.name.toLowerCase() === normalizedName\r\n    );\r\n\r\n    if (isContact) {\r\n      Notify.failure(`${name} is already in contacts.`);\r\n      return true;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const visibleContacts = this.getVisibleContacts();\r\n    const { filter } = this.state;\r\n    return (\r\n      <div>\r\n        <h1 className={s.title}>Phonebook</h1>\r\n        <Section>\r\n          <ContactForm addContact={this.addContact} />\r\n        </Section>\r\n        <Section title=\"Contacts\">\r\n          <FindContacts filter={filter} onChange={this.getFilter} />\r\n          <Contacts\r\n            contacts={visibleContacts}\r\n            deleteContact={this.deleteContact}\r\n          />\r\n        </Section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './index.css';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}